package main

/*
// 头文件的位置，相对于源文件是当前目录，所以是 .，头文件在多个目录时写多个  #cgo CFLAGS: ...
#cgo CFLAGS: -I./CarDoorPhm_DataAnalysis
// 从哪里加载动态库，位置与文件名，-ladd 加载 libadd.so 文件
#cgo LDFLAGS: -L./CarDoorPhm_DataAnalysis -lCarDoorPhm_DataAnalysis  -Wl,-rpath,CarDoorPhm_DataAnalysis
//// 从哪里加载动态库，位置与文件名，-ladd 加载 libadd.so 文件
#include "CarDoorPhm_DataAnalysis.h"
#include "rtwtypes.h"
#include "rt_nonfinite.h"
*/
import "C"
import (
	"fmt"
	"unsafe"
)
//打包.so 文件命令　gcc -fPIC -shared -o libCarDoorPhm_DataAnalysis.so CarDoorPhm_DataAnalysis.c


func main() {
	//定义数组
	arr:=[]C.double{8295,110.86651,0.03,0,834.6667,1,1,1,1,0,0,0,1,0,0,8399,110.86651,0.03,0,834.6667,1,1,1,1,0,0,0,1,0,0,8504,110.86651,0.03,0,834.6667,1,1,1,1,0,0,0,1,0,0,8608,110.86651,0.03,0,834.6667,1,1,1,1,0,0,0,1,0,0,8713,110.86651,0.03,0,834.6667,1,1,1,1,0,0,0,1,0,0,8817,110.86651,0.03,0,834.6667,1,1,1,0,1,0,0,1,0,0,8921,110.72599,0.02,0,834.6667,1,1,1,0,1,0,0,1,0,0,9026,110.72599,0.02,0,834.6667,1,1,1,0,1,0,0,1,0,0,9130,110.72599,0.03,0,834.6667,1,1,1,0,1,0,0,1,0,0,9235,111.33489,0.02,0,834.6667,1,1,1,0,1,0,0,1,0,0,9340,110.67915,0.03,0,834.6667,1,1,1,0,1,0,0,1,0,0,9441,110.81967,0.02,0,834.6667,1,1,1,0,1,0,0,1,0,0,9545,110.81967,0.03,0,834.6667,1,1,1,0,1,0,0,1,0,0,9650,111.05386,0.02,0,834.6667,1,1,1,0,1,0,0,1,0,0,9753,110.58548,0.01,0,834.6667,1,1,1,0,1,0,0,1,0,0,9858,111.14754,0.18,0,834.6667,1,1,1,0,1,0,0,1,0,0,9962,110.53864,0.15,66.42857,826.6667,1,1,1,0,1,0,0,1,0,0,10065,109.78922,0.51,130,816.7619,1,1,1,0,1,0,0,1,0,0,10169,108.52459,0.28,181.42857,800.7619,1,1,1,0,1,0,0,1,0,0,10278,108.94614,0.44,207.85715,779.8095,1,1,1,0,1,0,0,1,0,0,10380,108.75878,0.34,220,758.8571,1,1,1,0,1,0,0,1,0,0,10484,109.03981,0.46,225,736,1,1,1,0,1,0,0,1,0,0,10587,108.337234,0.66,235.71428,712.7619,1,1,1,0,1,0,0,1,0,0,10692,107.77518,0.41,250.71428,688,1,1,1,0,1,0,0,1,0,0,10797,107.72833,0.64,258.57144,660.9524,1,1,1,0,1,0,0,1,0,0,10901,107.91569,0.56,266.42856,634.6667,1,1,1,0,1,0,0,1,0,0,11004,108.337234,0.5,280,606.8571,1,1,1,0,1,0,0,1,0,0,11109,108.056206,0.49,275,578.6667,1,1,1,0,1,0,0,1,0,0,11212,108.337234,0.46,263.57144,552,1,1,1,0,1,0,0,1,0,0,11316,108.337234,0.46,263.57144,524.9524,1,1,1,0,1,0,0,1,0,0,11421,107.91569,0.74,247.85715,498.66666,1,1,1,0,1,0,0,1,0,0,11524,107.86885,0.54,265.7143,472,1,1,1,0,1,0,0,1,0,0,11629,108.00937,0.62,262.85715,443.8095,1,1,1,0,1,0,0,1,0,0,11734,107.91569,0.68,260,417.90475,1,1,1,0,1,0,0,1,0,0,11839,108.337234,0.62,265,390.85715,1,1,1,0,1,0,0,1,0,0,11943,107.91569,0.52,275,363.8095,1,1,1,0,1,0,0,1,0,0,12048,108.94614,0.49,278.57144,336.7619,1,1,1,0,1,0,0,1,0,0,12153,108.94614,0.49,280.7143,308.9524,1,1,1,0,1,0,0,1,0,0,12258,108.47775,0.5,273.57144,280.7619,1,1,1,0,1,0,0,1,0,0,12362,108.80562,0.28,266.42856,254.85715,1,1,1,0,1,0,0,1,0,0,12471,109.508194,0.2,231.42857,229.71428,1,1,1,0,1,0,0,1,0,0,12574,109.64871,0.15,195,208,1,1,1,0,1,0,0,1,0,0,12675,109.92974,0.18,165.71428,189.71428,1,1,1,0,1,0,0,1,0,0,12777,109.97658,0.23,145,174.85715,1,1,1,0,1,0,0,1,0,0,12881,110.16393,0.2,130.71428,160.7619,1,1,1,0,1,0,0,1,0,0,12984,110.30445,0.2,118.57143,148.95238,1,1,1,0,1,0,0,1,0,0,13089,109.55503,0.25,107.85714,137.90475,1,1,1,0,1,0,0,1,0,0,13191,109.69555,0.1,110,125.71429,1,1,1,0,1,0,0,1,0,0,13295,109.274,0.28,112.85714,114.666664,1,1,1,0,1,0,0,1,0,0,13399,109.97658,0.18,115,104,1,1,1,0,1,0,0,1,0,0,13504,109.83607,0.1,107.85714,91.809525,1,1,1,0,1,0,0,1,0,0,13608,109.41452,0.18,108.57143,80.7619,1,1,1,0,1,0,0,1,0,0,13713,109.227165,0.34,111.42857,69.71429,1,1,1,0,1,0,0,1,0,0,13816,109.133484,0.75,115,58.666668,1,1,1,0,1,0,0,1,0,0,13920,108.52459,0.85,141.42857,44.95238,1,1,1,0,1,0,0,1,0,0,14025,108.47775,0.3,167.85715,29.714285,1,1,1,0,1,0,0,1,0,0,14128,107.4473,0.74,150.71428,12.952381,1,1,1,0,1,0,0,1,0,0,14233,107.77518,0.57,46.42857,3.8095238,1,1,1,0,1,0,0,1,0,0,14338,108.00937,0.57,0,3.8095238,1,0,1,0,1,0,1,0,0,0,14442,107.166275,0.09,0,3.8095238,0,0,1,0,1,0,1,0,0,0,14547,109.133484,0.12,45,0.7619048,0,0,1,0,1,0,1,0,0,0,14652,110.53864,0.1,12.857142,0,0,0,1,0,1,0,1,0,0,0,14757,110.117096,0.09,0,0,0,0,1,0,1,0,1,0,0,0,14861,110.023415,0.02,0,0,0,0,0,0,1,0,1,0,0,0,14967,110.30445,0.03,0,0,0,0,0,0,1,0,1,0,0,0,15070,110.44496,0.03,0,0,0,0,0,0,1,0,1,0,0,0,15174,110.398125,0.02,0,0,0,0,0,0,1,0,1,0,0,0,15276,110.398125,0.02,0,0,0,0,0,0,1,0,1,0,0,0}
	//实例化实体，并传参二维数组首地址、行、列
	//C.emxCreateWrapper_real_T((*C.double)(unsafe.Pointer(&arr[0][0])),C.int(62),C.int(15))
	arr1 := []C.int{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
	add:=C.CarDoorPhm_DataAnalysis(C.emxCreateWrapper_real_T((*C.double)(unsafe.Pointer(&arr[0])),C.int(68),C.int(15)),(*C.int)(unsafe.Pointer(&arr1[0])))

	q0 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(0)*unsafe.Sizeof(C.int(1))))
	q1 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(1)*unsafe.Sizeof(C.int(1))))
	q2 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(2)*unsafe.Sizeof(C.int(1))))
	q3 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(3)*unsafe.Sizeof(C.int(1))))
	q4 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(4)*unsafe.Sizeof(C.int(1))))

	q5 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(5)*unsafe.Sizeof(C.int(1))))
	q6 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(6)*unsafe.Sizeof(C.int(1))))
	q7 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(7)*unsafe.Sizeof(C.int(1))))
	q8 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(8)*unsafe.Sizeof(C.int(1))))
	q9 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(9)*unsafe.Sizeof(C.int(1))))

	q10 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(10)*unsafe.Sizeof(C.int(1))))
	q11 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(11)*unsafe.Sizeof(C.int(1))))
	q12 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(12)*unsafe.Sizeof(C.int(1))))
	q13 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(13)*unsafe.Sizeof(C.int(1))))
	q14 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(14)*unsafe.Sizeof(C.int(1))))


	q15 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(15)*unsafe.Sizeof(C.int(1))))
	q16 := *(*C.int)(unsafe.Pointer(uintptr(add) + uintptr(16)*unsafe.Sizeof(C.int(1))))
	
	fmt.Println("以下输出结果时从算法得来")
	fmt.Println(q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,q16)
}
